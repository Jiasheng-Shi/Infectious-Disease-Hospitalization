# load packages
library(mvtnorm)
library(EpiEstim)
library(mc2d)
library(ggplot2)
library(nlme)
library(numDeriv)
library(TTR)
library(parallel)
{
## tildeomega[k]=precentage of patients went to the hospital after (k-1)days
##    after his infection, k-1=0,...5
## tildeomega[7]=precentage of patients never went to the hospital after his infection,
tildeomega=c()
tildeomega[7]=0.5
for (i in 1:5) {
tildeomega[i]=pgamma(i,shape = 1.6,scale = 1.5)-pgamma((i-1),shape = 1.6,scale = 1.5)
}
tildeomega[6]=pgamma(5,shape = 1.6,scale = 1.5,lower.tail = FALSE)
tildeomega[1:6]=tildeomega[1:6]*(1-tildeomega[7])
plot(x=c(1:6),y=tildeomega[1:6],type="l",lty=4)
## omega[k]=precentage of patients get infected by a infectious one after k days, k=1,...25
omega=c()
for (i in 1:24) {
omega[i]=pgamma(i,shape = 2.5,scale = 3)-pgamma((i-1),shape = 2.5,scale = 3)
}
omega[25]=pgamma(24,shape = 2.5,scale = 3,lower.tail = FALSE)
plot(x=c(1:25),y=omega,type="l",lty=4)
}
getwd()
setwd("/Users/shij/Documents/GitHub/Infectious-Disease-Hospitalization/sampled data/")
{
set.seed(10)
## length of the Time series/number of observations
T=120
## Generate Covariants
## Z is the covariates, Z[,1:(NoCov=2)] assumed to be time variate
NoCov=2
Z<-matrix(data=NA, nrow=T, ncol=NoCov)
for (t in 1:T) {Z[t,1]=5-(T/8)+((2*t)/8)+rnorm(1,mean=0,sd=2.5) }
logit=function(p){return(log(p/(1-p)))}
Z[,2]=logit( runif(T,min=0.01,max=0.99) )+2
##################################
## True parameter value:
## Oracle beta
OracleBeta=as.matrix(c(-0.02,-0.125),nrow=NoCov,ncol=1)
## Oracle phi
OraclePhi=c(0.7,0.5)
OraclePhi_0=OraclePhi[1]
OraclePhi_1=OraclePhi[2]
##################################
## Generate the instantaneous reproduction number
## R[t], the instantaneous reproduction number at time t.
R<-matrix(data = NA, nrow=1,ncol=T)
### R[0], the instantaneous reproduction number at time 0.
R_0=2.5
#epsilon<-rep(0,T)
R[1]=exp( (OraclePhi_0) + (OraclePhi_1*log(R_0)) + (Z[1,]%*%OracleBeta)  )
for (t in 2:T) {
R[t]=exp( (OraclePhi_0) + (OraclePhi_1*log(R[(t-1)]))+ (Z[t,]%*%OracleBeta)  )
}
plot(R[,],type = "l",lty=4)
lines(x=c(0:120),y=rep(1,121),type="l",lty=4)
}
{
set.seed(10)
I_0=50
## Generate I[t], number of incidence at time t.
I<-matrix(data = NA, nrow=1,ncol=T)
I[1]=rpois(1,lambda = (R[1]*I_0*omega[1]))
for (t in 2:25) { I[t]=rpois(1,lambda = ( R[t]*((I_0*omega[t])+ (I[1:(t-1)]%*%omega[(t-1):1] )  )  ) ) }
for (t in 26:T) {
if (( I[(t-1):(t-25)]%*%omega[1:25]  )<=100000){
I[t]=rpois(1,lambda = (R[t]*( I[(t-1):(t-25)]%*%omega[1:25]  ) ))
}else {
multipconstant= (R[t]*( I[(t-1):(t-25)]%*%omega[1:25]  ) )%/%100000
residueconstant= (R[t]*( I[(t-1):(t-25)]%*%omega[1:25]  ) )%%100000
I[t]=sum( rpois(multipconstant,lambda = 100000   ) ) + rpois(1,lambda = residueconstant  )
}
}
Isave=I
}
{
set.seed(10)
h=rmultinomial(n=T,size = I, prob = tildeomega)
H=matrix(data=NA,nrow=1,ncol=T)
for (i in 1:T) {
H[i]=0
for (j in max(1,i+2-length(tildeomega)):i ) {
H[i]=H[i]+h[j,(i+1-j)]
}
}
}
save(I_0,R0,Z,I,R,H,Isave,file="sampled_data_case1.rda")
save(I_0,R_0,Z,I,R,H,Isave,file="sampled_data_case1.rda")
getwd()
a=readRDS(file = "sampled_data_case1.rda")
a=load(file = "sampled_data_case1.rda")
a
a
I_0
save(list(I_0,R_0,Z,I,R,H,Isave),file="sampled_data_case1.rda")
a=load(file = "sampled_data_case1.rda")
a
a[1]
SampleData=list(I_0,R_0,Z,I,R,H,Isave)
SampleData
SampleData[[1]]
a[[1]]
save(SampleData,file="sampled_data_case1.rda")
a=load(file = "sampled_data_case1.rda")
a
a[[1]]
rm(SampleData)
a
a=load(file = "sampled_data_case1.rda")
a
a[1]
a[[1]]
saveRDS(SampleData,file="sampled_data_case1.rds")
a=readRDS(file = "sampled_data_case1.rds")
a
library(mvtnorm)
library(EpiEstim)
library(mc2d)
library(ggplot2)
library(nlme)
library(numDeriv)
library(TTR)
library(parallel)
library(dplyr)
setwd("/Users/shij/Desktop/working on folder/hospitalization_covid19/code_draft/Hospitalization_Case5_real_data/")
### load the data
reg.dat.Origin<- read.csv('./org.select.gen_all_update.csv')
getwd()
setwd("/Users/shij/Dropbox/00_with_Yizhao_Jiasheng/hospitalization_paper/code_draft/Hospitalization_Case5_real_data/")
### load the data
reg.dat.Origin<- read.csv('./org.select.gen_all_update.csv')
View(reg.dat.Origin)
#Miami-Dade 12086
#Wayne MI 26163
#NYC NY 36061
#COOK IL 17031
reg.dat.H=reg.dat.Origin[reg.dat.Origin$fips_code %in% c(12086,26163,36061,17031),]
View(reg.dat.H)
names(reg.dat.H)=c("date","fips","adultConH","YadultConH","pedConH","YpedConH","ED","EDH","H","YH",'county','state')
reg.dat.H$date <- as.Date(reg.dat.H$date,"%Y-%m-%d")
reg.dat.H$date <- as.Date(reg.dat.H$date,format = '%Y-%m-%d')
reg.dat.H=reg.dat.H[,!names(reg.dat.H) %in%
c("adultConH","YadultConH","pedConH","YpedConH","ED","EDH","H")]
reg.dat.H=reg.dat.H[reg.dat.H$date>=as.Date('2020-12-01','%Y-%m-%d') &
reg.dat.H$date<=as.Date('2021-06-30','%Y-%m-%d'),]
reg.dat.Z.Origin<- read.csv('./reg.hosp.dat_2022-02-11.csv')
reg.dat.Z=reg.dat.Z.Origin[reg.dat.Z.Origin$fips %in% c(12086,26163,36061,17031),]
reg.dat.Z$date <- as.Date(reg.dat.Z$date,"%Y-%m-%d")
reg.dat.Z$date <- as.Date(reg.dat.Z$date,format = '%Y-%m-%d')
reg.dat.Z=reg.dat.Z[,names(reg.dat.Z) %in%
c("date","fips","wet_bulb_temp_C","daily_visitation_diff","inc","county","state")]
reg.dat.Z=reg.dat.Z[reg.dat.Z$date>=as.Date('2020-12-01','%Y-%m-%d') &
reg.dat.Z$date<=as.Date('2021-06-30','%Y-%m-%d'),]
reg.dat<- merge(x=reg.dat.H,y=reg.dat.Z,by.x = c("fips","date","county","state"),
by.y = c("fips","date","county","state"))
View(reg.dat)
setwd("/Users/s")
setwd("/Users/shij/Documents/GitHub/Infectious-Disease-Hospitalization/Covid_code_real_data_organize/derived/")
write.csv(reg.dat, "derived_data.csv")
